{"version":3,"sources":["utils/screen-sizes.ts","components/searchbar/search.styles.ts","components/searchbar/search.component.tsx","components/header/header.styles.ts","components/header/header.component.tsx","components/movies/movie-list-child/movie-list-child.styles.ts","components/button/button.styles.ts","components/button/button.component.tsx","components/no-image/no-image.styles.ts","components/no-image/no-image.component.tsx","components/movies/movie-item/movie-item.styles.ts","components/movies/movie-item/movie-item.component.tsx","components/movies/movie-list-child/movie-list-child.component.tsx","components/home/home.styles.ts","components/home/home.component.tsx","components/movies/movie-list/movie-list.styles.ts","components/movies/movie-list/movie-list.component.tsx","api/omdb.js","components/movies/movie-playlist/movie-playlist.styles.ts","components/movies/movie-playlist/movie-playlist.component.tsx","components/app/app.styles.ts","components/not-found/not-found.styles.ts","components/not-found/not-found.component.tsx","components/app/app.component.tsx","index.tsx"],"names":["sizes","devices","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop","maxtop","SearchField","styled","div","InputContainer","SearchBar","onSubmit","useState","term","setTerm","navigate","useNavigate","e","preventDefault","type","placeholder","value","onChange","target","name","className","HeaderContainer","props","scrollTopVal","SearchContainer","Logo","Link","PlayList","Header","scrollingTopValue","handleSubmit","numOfItems","to","Perimeter","MovieListContainer","MovieListItem","ButtonContainer","button","padding","ThemedButton","children","action","onClick","NoImageContainer","NoImage","ItemContainer","ImageContainer","MovieDetails","PlayListIcon","MovieItem","movie","addToPlayList","playlist","removeFromPlaylist","stopPropagation","id","imdbID","includes","Poster","src","alt","Title","MovieListChild","movieList","onSelectMovie","myRef","useRef","atEnd","setAtEnd","atStart","setAtStart","Fragment","ref","onScroll","currentEl","currentTarget","reachedEnd","scrollLeft","clientWidth","scrollWidth","isAtStart","map","idx","HomeContainer","Home","moveInLeft","keyframes","moveInBottom","buttonMoveIn","moveInRight","ListContainer","ChildContainer","BackgroundImageContainer","BackgroundImage","MovieList","window","addEventListener","scrollTopValue","scrollY","setScrolling","setScrollingTop","this","selectedMovie","Released","Genre","Country","Runtime","imdbRating","Rated","Plot","Language","Director","Awards","Actors","length","React","Component","axios","create","baseURL","params","apikey","PlayListContainer","EmptyPlayList","MoviePlayList","state","movies","confirmPlayList","console","log","alert","a","omdb","get","i","movieDetail","setState","data","clearPlaylist","filter","RouterContainer","Footer","color","EmptyContainer","NotFound","App","setScrollingTopValue","val","scrollingTopvalue","setIsScrolling","isScrolledBottom","getFullDetailsOfTheMovie","imdbId","plot","movieDetails","status","setSelectMovie","addToPlaylist","playList","onSearchSubmit","text","moviesList","Promise","resolve","reject","s","response","response_status","data_status","Response","Search","Error","then","filteredData","catch","err","Year","Writer","isScrolling","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e89a0139.chunk.js","sourcesContent":["// Breakpoints\nexport const sizes = {\n  mobileS: '320px',\n  mobileM: '375px',\n  mobileL: '425px',\n  tablet: '768px',\n  laptop: '1024px',\n  laptopL: '1440px',\n  desktop: '2560px',\n};\n\n// Devices\nexport const devices = {\n  mobileS: `(max-width: ${sizes.mobileS})`,\n  mobileM: `(max-width: ${sizes.mobileM})`,\n  mobileL: `(max-width: ${sizes.mobileL})`,\n  tablet: `(min-width: ${sizes.tablet})`,\n  laptop: `(min-width: ${sizes.laptop})`,\n  laptopL: `(min-width: ${sizes.laptopL})`,\n  desktop: `(min-width: ${sizes.desktop})`,\n  maxtop: `(min-height: ${sizes.laptop})`,\n};\n","import styled from 'styled-components';\nimport { devices } from '../../utils/screen-sizes';\n\nexport const SearchField = styled.div`\n  width: 100%;\n  height: 100%;\n  form {\n    height: 100%;\n    width: 100%;\n  }\n`;\n\nexport const InputContainer = styled.div`\n  height: 100%;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: 1px solid black;\n  border-radius: 10px;\n  background: white;\n  margin: 5px 0;\n  input {\n    margin-left: 10px;\n    border: 0;\n    width: 90%;\n    padding: 5px 0;\n    transition: all 0.2s;\n    background: white;\n    font-family: inherit;\n    font-size: inherit;\n    color: inherit;\n    :focus {\n      outline: none;\n    }\n  }\n\n  .search {\n    border-radius: 50%;\n    margin-right: 5px;\n    background: white;\n    .search-icon {\n      border: 4px solid black;\n      border-radius: 50%;\n    }\n  }\n\n  @media ${devices.mobileL} {\n    input {\n      margin-left: 10px;\n    }\n  }\n`;\n","import React, { ChangeEvent, FormEvent, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { InputContainer, SearchField } from './search.styles';\n\n// Incoming props.\ninterface Props {\n  onSubmit: (term: string) => void\n}\n\n// Search component: Allows user to search for the movie.\nconst SearchBar: React.FC<Props> = ({ onSubmit}) => {\n  const [term, setTerm] = useState('');\n  let navigate = useNavigate();\n  const onInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setTerm(e.target.value)\n  };\n\n  // On user submits the movie name request,and redirects to the home page.\n  const onFormSubmit = (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    onSubmit(term);\n    navigate(`/fast_omdb/`);\n  };\n  return (\n    <SearchField>\n      <form onSubmit={onFormSubmit}>\n        <InputContainer>\n          <input\n            type='text'\n            placeholder='Search by title'\n            value={term}\n            onChange={onInputChange}\n          />\n          <button type='submit' name='search' className='search'>\n            <div className='search-icon'></div>\n          </button>\n        </InputContainer>\n      </form>\n    </SearchField>\n  );\n} \n\nexport default SearchBar;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { devices } from '../../utils/screen-sizes';\n\ninterface Props {\n  scrollTopVal: number;\n}\n\nexport const HeaderContainer = styled.div<Props>`\n  display: flex;\n  position: sticky;\n  top: 0;\n  height: 55px;\n  width: 100vw;\n  align-items: center;\n  justify-content: space-between;\n  z-index: 99;\n  ${(props) =>\n    `background: rgba(128,${100 - props.scrollTopVal},128, ${\n      props.scrollTopVal / 100\n    })`}\n`;\n\nexport const SearchContainer = styled.div`\n  flex-basis: 40%;\n  @media ${devices.mobileL} {\n    flex-basis: 35%;\n  }\n  @media ${devices.mobileS} {\n    flex-basis: 20%;\n    font-size: 0.6rem;\n  }\n`;\n\nexport const Logo = styled(Link)`\n  position: relative;\n  height: auto;\n  margin-left: 1rem;\n  border-radius: 10%;\n  font-size: 1.5rem;\n  font-weight: 900;\n  letter-spacing: 0.1px;\n  background: linear-gradient(to left, #f2db83, black);\n  font-stretch: wider;\n  transform: scale(1, 1.2);\n  flex-shrink: 0;\n  background-clip: text;\n  -webkit-background-clip: text;\n  color: transparent;\n  @media ${devices.mobileL} {\n    font-size: 1rem;\n    background: linear-gradient(to left, #f2db83, white);\n    background-clip: text;\n    -webkit-background-clip: text;\n    color: transparent;\n  }\n\n  @media ${devices.mobileS} {\n    font-size: 1rem;\n  }\n`;\n\nexport const PlayList = styled(Link)`\n  color: white;\n  border: 1px solid wheat;\n  width: 5.5rem;\n  text-align: center;\n  padding: 10px 15px;\n  margin: 5px 0;\n  margin-right: 25px;\n  box-shadow: inset 1px 1px wheat;\n  text-decoration: none;\n  display: flex;\n  justify-content: space-between;\n  .count {\n    display: inline-block;\n    padding: 3px 5px;\n    border: 1px solid white;\n    border-radius: 50%;\n    font-size: 0.8rem;\n    font-weight: 900;\n    background: purple;\n    box-shadow: 1px 1px 10px white;\n    :hover {\n      cursor: pointer;\n    }\n  }\n  .text {\n    :hover {\n      cursor: pointer;\n    }\n  }\n\n  :hover,\n  * > :hover {\n    cursor: pointer;\n    transform: translateY(-1px);\n    box-shadow: 1px 2px white;\n  }\n  :active,\n  * > :active {\n    transform: translateY(0px);\n    box-shadow: inset 1px 1px white;\n  }\n\n  @media ${devices.mobileL} {\n    padding: 6px 8px;\n    margin-right: 15px;\n    font-size: small;\n    .text {\n      margin-top: 3px;\n    }\n  }\n  @media ${devices.mobileS} {\n    font-size: 0.6rem;\n    width: 4rem;\n    .text {\n      margin-top: 5px;\n    }\n  }\n`;\n","import React from 'react';\nimport Search from '../searchbar/search.component';\nimport { HeaderContainer, Logo, PlayList, SearchContainer } from './header.styles';\n\n// Incoming props.\ninterface Props {\n  handleSubmit: (text: string) => Promise<void>,\n  scrollingTopValue: number,\n  isScrolling: boolean,\n  numOfItems: number,\n}\n\n// Header component\nconst Header: React.FC<Props> = ({scrollingTopValue, handleSubmit, numOfItems}) => {\n  return (\n    <HeaderContainer scrollTopVal={scrollingTopValue }>\n      <Logo to='/fast_omdb/'>OMDb</Logo>\n      <SearchContainer>\n        <Search onSubmit={handleSubmit} />\n      </SearchContainer>\n      <PlayList to='/fast_omdb/playlist'>\n        <label className='count'>{numOfItems}</label>\n        <label className='text'>Playlist</label>\n      </PlayList>\n    </HeaderContainer>\n  );\n};\n\nexport default Header;\n","import styled from 'styled-components';\nimport { devices } from '../../../utils/screen-sizes';\n\nexport const Perimeter = styled.div`\n  position: relative;\n  .left {\n    content: '';\n    display: block;\n    position: absolute;\n    z-index: 1;\n    top: 0;\n    left: 0;\n    width: 100px;\n    height: 100%;\n    background: linear-gradient(to right, black, transparent);\n    @media ${devices.mobileL} {\n      display: none;\n    }\n  }\n\n  .right {\n    content: '';\n    display: block;\n    position: absolute;\n    z-index: 1;\n    top: 0;\n    right: 0;\n    width: 100px;\n    height: 100%;\n    background: linear-gradient(to left, black, transparent);\n    @media ${devices.mobileL} {\n      display: none;\n    }\n  }\n`;\n\nexport const MovieListContainer = styled.div`\n  position: relative;\n  display: flex;\n  overflow-y: auto;\n\n  @media ${devices.maxtop} {\n    overflow: hidden;\n    flex-wrap: wrap;\n    margin: 20px;\n  }\n\n  @media ${devices.mobileL} {\n    flex-direction: column;\n  }\n`;\n\nexport const MovieListItem = styled.div`\n  width: 200px;\n  margin: 10px 5px;\n  flex-shrink: 0;\n  &:hover {\n    cursor: pointer;\n  }\n  @media ${devices.maxtop} {\n    margin: 10px;\n    border: 2px solid black;\n    box-shadow: 1px 1px 4px black;\n  }\n\n  @media ${devices.mobileL} {\n    width: 100%;\n    margin: 10px;\n  }\n`;\n","import styled from 'styled-components';\nimport { devices } from '../../utils/screen-sizes';\n\ninterface Props {\n  padding: string;\n}\n\nexport const ButtonContainer = styled.button<Props>`\n  padding: ${(props) => props.padding};\n  color: white;\n  background: purple;\n  box-shadow: inset 1px 1px 4px white;\n  :hover {\n    cursor: pointer;\n    box-shadow: 1px 1px 7px white;\n  }\n  :active {\n    box-shadow: inset 1px 1px 4px white;\n  }\n\n  @media ${devices.mobileL} {\n    text-align: center;\n  }\n`;\n","import React, { MouseEventHandler } from 'react';\nimport { ButtonContainer } from './button.styles';\n\n// Incoming props\ninterface Props{\n    padding: string,\n    action: MouseEventHandler<HTMLButtonElement>\n}\n\n// Reusable component\nconst ThemedButton: React.FC<Props> = ({padding, children, action}) => {\n    return (\n        <ButtonContainer padding={padding} onClick={action}>\n            {children}\n        </ButtonContainer>\n    );\n};\n\nexport default ThemedButton;","import styled from 'styled-components';\n\nexport const NoImageContainer = styled.div`\n  position: relative;\n  height: 100%;\n  width: 100%;\n  border: 1px solid white;\n  color: black;\n  background: white;\n  .title {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    text-align: center;\n    .a {\n      font-weight: 700;\n      letter-spacing: 2px;\n    }\n    .b {\n      font-size: 0.7rem;\n    }\n  }\n`;\n","import React from 'react';\nimport { NoImageContainer } from './no-image.styles';\n\n// NoImage container is used to display the defailt image for the movie if the\n// Poster is not available for the movie.\nconst NoImage:React.FC = () => {\n    return (\n        <NoImageContainer>\n            <div className='title'>\n                <div className='a'>OMDb</div>\n                <div className='b'>(fast.co)</div>\n            </div>\n            \n        </NoImageContainer>\n    );\n};\n\nexport default NoImage;","import styled from 'styled-components';\nimport { devices } from '../../../utils/screen-sizes';\n\nexport const ItemContainer = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  height: 300px;\n  border: 1px solid black;\n\n  :hover {\n    cursor: pointer;\n  }\n\n  .focus {\n    position: absolute;\n    top: 0;\n    right: 0;\n    width: 100%;\n    height: 85%;\n    * {\n      display: contents;\n    }\n    .playlist-button {\n      border: 1px solid black;\n      position: absolute;\n      top: 0;\n      width: 0px;\n      padding: 0px;\n      background: none;\n      * {\n        display: none;\n      }\n      &:hover,\n      * > :hover {\n        cursor: pointer;\n        box-shadow: 1px 1px 5px black;\n      }\n\n      &:active,\n      * > :active {\n        box-shadow: inset 1px 1px 5px black;\n      }\n    }\n    &:hover {\n      background: linear-gradient(to top, black, transparent, transparent);\n      * {\n        display: block;\n      }\n    }\n  }\n\n  @media ${devices.mobileL} {\n    flex-direction: row;\n    width: 95%;\n    height: 150px;\n    box-shadow: 1px 1px 15px purple;\n    overflow-y: auto;\n    position: relative;\n    overflow: hidden;\n    .focus {\n      position: absolute;\n      top: 0;\n      right: 0;\n      width: 100%;\n      height: 85%;\n      * {\n        display: block;\n      }\n      .playlist-button {\n        top: auto;\n        bottom: 0;\n        left: auto;\n        right: 60px;\n        width: 0px;\n        padding: 0px;\n        * {\n          display: block;\n        }\n      }\n      &:hover {\n        background: none;\n      }\n    }\n\n    :active {\n      box-shadow: 1px 1px 15px white;\n    }\n  }\n`;\n\nexport const ImageContainer = styled.div`\n  img,\n  .no-image {\n    height: 250px;\n    width: 100%;\n  }\n  @media ${devices.mobileL} {\n    flex: 1 1 30%;\n    img,\n    .no-image {\n      height: 150px;\n      width: 100%;\n    }\n  }\n`;\n\nexport const MovieDetails = styled.div`\n  text-align: center;\n  background: black;\n  color: white;\n  height: 50px;\n  overflow-x: hidden;\n  overflow-y: auto;\n  @media ${devices.mobileL} {\n    flex: 1 1 50%;\n    height: 150px;\n    padding: 0 10px;\n    div {\n      padding: 10px 0;\n    }\n  }\n`;\n\nexport const PlayListIcon = styled.div`\n  position: relative;\n  height: 20px;\n  width: 20px;\n  margin: 0;\n  background: white;\n  div {\n    position: absolute;\n    top: 3px;\n    left: 4px;\n    height: 15px;\n    width: 12px;\n    background: black;\n    box-shadow: inset 1px 1px 4px white;\n  }\n  .play {\n    clip-path: polygon(100% 50%, 0 0, 0 100%);\n  }\n  .delete {\n    clip-path: polygon(\n      20% 0%,\n      0% 20%,\n      30% 50%,\n      0% 80%,\n      20% 100%,\n      50% 70%,\n      80% 100%,\n      100% 80%,\n      70% 50%,\n      100% 20%,\n      80% 0%,\n      50% 30%\n    );\n  }\n  @media ${devices.mobileL} {\n    width: 18px;\n    div {\n      top: 10%;\n      left: 20%;\n    }\n  }\n`;\n","import React, { MouseEventHandler } from 'react';\nimport ThemedButton from '../../button/button.component';\nimport NoImage from '../../no-image/no-image.component'\nimport {\n  ImageContainer,\n  ItemContainer,\n  MovieDetails,\n  PlayListIcon,\n} from './movie-item.styles';\n\n// Incoming props.\ninterface Props {\n  movie: {\n    Poster: string,\n    Title: string,\n    imdbID: string,\n  },\n  addToPlayList: (val:string) => void,\n  removeFromPlaylist: (val:string) => void\n  playlist: string[],\n}\n\n// Reusable component.\n// Displays the movie information.\nconst MovieItem: React.FC<Props> = ({ movie, addToPlayList, playlist, removeFromPlaylist }) => {\n  const addOrRemoveFromPlayList: MouseEventHandler<HTMLButtonElement> = (e) => {\n    e.stopPropagation()\n    const id = movie.imdbID;\n    // We are basically performing toggle operation.\n    playlist.includes(id) ? removeFromPlaylist(id) : addToPlayList(id);\n  }\n  return (\n    <ItemContainer> \n      <div className='focus'>\n        <div className='playlist-button'>\n        <ThemedButton padding='7px 7px' action={addOrRemoveFromPlayList}>\n          <PlayListIcon>\n            {!playlist.includes(movie.imdbID) ?\n              <div className='play'></div> :\n              <div className='delete'></div>}\n          </PlayListIcon>\n        </ThemedButton>\n        </div>\n      </div>\n      <ImageContainer>\n        {movie.Poster !== 'N/A' ?\n          <img src={movie.Poster} alt={movie.Title} /> :\n          <div className='no-image'><NoImage/></div>}\n      </ImageContainer>\n      <MovieDetails>\n        <div>{movie.Title}</div>\n      </MovieDetails>\n    </ItemContainer>\n  );\n};\n\nexport default MovieItem;\n","import React, { UIEventHandler, useRef, useState } from 'react';\nimport { MovieListItem, MovieListContainer, Perimeter } from './movie-list-child.styles';\nimport MovieItem from '../movie-item/movie-item.component';\nimport { briefMovieInfo, detailedMovieInfo } from '../../../utils/interfaces';\n\n// Incoming props\ninterface Props {\n    movieList: briefMovieInfo[],\n    selectedMovie: detailedMovieInfo,\n    onSelectMovie: any,\n    setScrolling: (val: boolean) => void,\n    setScrollingTop: (val: number) => void,\n    addToPlayList: (val: string) => void,\n    removeFromPlaylist: (val:string) => void,\n    playlist: string[]\n}\n  \n// Displays the list of movies.\nconst MovieListChild: React.FC<Props> = ({ movieList, onSelectMovie, playlist, addToPlayList, removeFromPlaylist }) => {\n    const myRef = useRef(null);\n    const [atEnd, setAtEnd] = useState(false)\n    const [atStart, setAtStart] = useState(true)\n    const getScrollPosition:UIEventHandler<HTMLDivElement> = (e) => {\n        const currentEl = e.currentTarget as HTMLDivElement;\n        let reachedEnd: boolean = currentEl.scrollLeft+currentEl.clientWidth >= currentEl.scrollWidth-100? true: false;\n        setAtEnd(reachedEnd);\n        let isAtStart: boolean = currentEl.scrollLeft <= 100 ? true : false;\n        setAtStart(isAtStart);\n    }\n    \n    return (\n        <Perimeter>\n            {!atStart?<div className='left'></div>:<React.Fragment></React.Fragment>}\n            <MovieListContainer ref={myRef} onScroll={getScrollPosition}>\n            {movieList ? (\n            movieList.map((movie, idx) => (\n              <MovieListItem\n                key={idx}\n                onClick={() => onSelectMovie(movie)}>\n                    <MovieItem movie={movie} playlist={playlist} addToPlayList={addToPlayList} removeFromPlaylist={removeFromPlaylist}/>\n              </MovieListItem>\n            ))\n          ) : (\n            <React.Fragment>No Match Found!!</React.Fragment>\n            )}    \n            </MovieListContainer>\n            {!atEnd?<div className='right'></div>:<React.Fragment></React.Fragment>}\n        </Perimeter>\n    );\n};\n\nexport default MovieListChild;","import styled from 'styled-components';\n\nexport const HomeContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100vw;\n  height: 100vh;\n  text-align: center;\n  justify-content: center;\n  align-items: center;\n  background: radial-gradient(purple, black, black);\n  color: white;\n\n  .omdb {\n    font-weight: 700;\n    font-size: 4rem;\n    background: linear-gradient(to left, #f2db83, black);\n    background-clip: text;\n    -webkit-background-clip: text;\n    color: transparent;\n  }\n  .sub {\n    font-size: 1.5rem;\n    font-weight: 900;\n    text-shadow: 1px 1px 4px #f2db83;\n    color: black;\n  }\n`;\n","import React from 'react';\nimport { HomeContainer } from './home.styles';\n\n\n// Home component.\n// Initial screen is displayed when user opens the link.\nconst Home = () => {\n    return (\n        <HomeContainer>\n            <label className='omdb'>OMDb</label>\n            <label className='sub'>Search your favorite movie</label>\n        </HomeContainer>\n    );\n};\n\nexport default Home;","import styled, { keyframes } from 'styled-components';\nimport { devices } from '../../../utils/screen-sizes';\n\nconst moveInLeft = keyframes`\n   from {transform: translateX(-100px);}\n    to {transform: translateX(0px);}\n`;\n\nconst moveInBottom = keyframes`\n   from {transform: translateY(100px);color: transparent; display: none}\n    to {transform: translateY(0px);}\n`;\n\nconst buttonMoveIn = keyframes`\n   0% {transform: translateY(100px);opacity: 0;}\n   90% {transform: translateY(100px);opacity: 0;}\n    100% {transform: translateY(0px);}\n`;\n\nconst moveInRight = keyframes`\n   from {transform: translateX(100px);color: transparent}\n    to {transform: translateX(0px);}\n`;\n\nexport const ListContainer = styled.div`\n  overflow: auto;\n  overscroll-behavior: contain;\n  @media ${devices.mobileL} {\n    min-width: 350px;\n  }\n`;\n\nexport const ChildContainer = styled.div`\n  @media ${devices.mobileL} {\n    height: 60vh;\n    overflow: auto;\n  }\n`;\n\nexport const BackgroundImageContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 20px;\n  background: radial-gradient(purple, black, black);\n  height: 30em;\n  color: white;\n  .left-detail {\n    display: flex;\n    flex-direction: column;\n    text-align: right;\n    flex: 1;\n    padding-right: 20px;\n    transition: all 1s;\n    overflow-y: auto;\n    .title {\n      display: block;\n      font-size: 2.5rem;\n      font-weight: 700;\n      word-wrap: break-word;\n      color: white;\n      animation: ${moveInLeft} 1s ease-in;\n    }\n    .sub-details {\n      /* border: 1px solid wheat; */\n      text-align: center;\n      display: flex;\n      flex-direction: column;\n      width: 70%;\n      margin-left: auto;\n      margin-top: 7%;\n      padding-right: 10px;\n      padding-top: 10px;\n      float: right;\n      animation: ${moveInBottom} 1s ease-in;\n      div {\n        display: flex;\n        padding-bottom: 20px;\n        label {\n          flex: 1;\n          text-align: left;\n        }\n        label:first-child {\n          text-align: right;\n          padding-right: 20px;\n          font-weight: 700;\n        }\n      }\n    }\n    .button {\n      animation: ${buttonMoveIn} 1s ease-in;\n      margin: 10px;\n    }\n  }\n\n  .right-detail {\n    flex: 1;\n    padding-left: 20px;\n    margin-left: 10px;\n    margin-right: 20px;\n    margin-top: 40px;\n    overflow-y: auto;\n    animation: ${moveInRight} 1s ease-in;\n    .item {\n      display: flex;\n      padding-bottom: 20px;\n      label {\n        text-align: left;\n        width: 80%;\n      }\n      label:first-child {\n        text-align: right;\n        font-weight: 700;\n        padding-right: 20px;\n        width: 20%;\n      }\n    }\n    .plot {\n      border-top: 1px solid wheat;\n      display: flex;\n      flex-direction: column;\n      padding-top: 10px;\n      label:first-child {\n        font-weight: 700;\n        font-size: 1.1rem;\n        text-align: center;\n      }\n      label:last-child {\n        text-align: center;\n        padding: 10px;\n        overflow-y: auto;\n        height: 10%;\n      }\n    }\n  }\n\n  @media ${devices.mobileL} {\n    height: 40vh;\n    min-width: 95%;\n    box-shadow: inset 0 -5px 5px white;\n    position: relative;\n    overflow: auto;\n    .left-detail {\n      order: 1;\n      text-align: left;\n      padding-left: 20px;\n      height: 75%;\n      .title {\n        font-size: 1.3rem;\n      }\n      .sub-details {\n        width: 100%;\n        margin-top: 3%;\n        padding-top: 5px;\n        font-size: 0.7rem;\n        div {\n          padding-bottom: 20px;\n          label {\n            flex: 1;\n            text-align: left;\n          }\n          label:first-child {\n            text-align: left;\n            padding-right: 0px;\n          }\n        }\n      }\n\n      .button {\n        position: absolute;\n        right: 20px;\n        bottom: 0;\n      }\n    }\n    .right-detail {\n      display: none;\n    }\n  }\n`;\n\nexport const BackgroundImage = styled.div`\n  position: relative;\n  img,\n  .no-image {\n    z-index: -99;\n    height: 90%;\n    width: 300px;\n    box-shadow: 15px 15px 20px black;\n  }\n\n  .top {\n    position: absolute;\n    top: 0;\n    right: 0;\n    font-size: 80%;\n    font-weight: 700;\n    width: 20%;\n    height: 5%;\n    label {\n      display: block;\n      margin-top: 5px;\n    }\n  }\n\n  .left {\n    position: absolute;\n    bottom: 10%;\n    left: 0;\n    font-size: 1rem;\n    font-weight: 700;\n    width: 20%;\n    height: 5%;\n  }\n\n  .right {\n    position: absolute;\n    bottom: 10%;\n    right: 0;\n    font-size: 2rem;\n    font-weight: 700;\n    width: 20%;\n    height: 20%;\n  }\n\n  .image-cover {\n    display: flex;\n    z-index: 1;\n    background: rgba(255, 0, 255, 0.7);\n    color: white;\n    text-align: center;\n    flex-direction: column;\n    .star {\n      height: 50%;\n      background: gold;\n      margin: 5px 2px;\n      clip-path: polygon(\n        50% 0%,\n        61% 35%,\n        98% 35%,\n        68% 57%,\n        79% 91%,\n        50% 70%,\n        21% 91%,\n        32% 57%,\n        2% 35%,\n        39% 35%\n      );\n    }\n  }\n\n  @media ${devices.mobileL} {\n    width: 150px;\n    margin-left: 10px;\n    img,\n    .no-image {\n      max-width: 150px;\n      box-shadow: 1px 1px 20px white;\n    }\n    .top {\n      font-size: 75%;\n      height: 12%;\n    }\n    .left {\n      font-size: 0.7rem;\n      font-weight: 700;\n      width: 20%;\n      height: 11%;\n    }\n    .right {\n      font-size: 1rem;\n      font-weight: 700;\n      width: 20%;\n      height: 20%;\n    }\n  }\n`;\n","import React from 'react';\nimport { briefMovieInfo, detailedMovieInfo } from '../../../utils/interfaces';\nimport MovieListChild from '../movie-list-child/movie-list-child.component'\nimport Home from '../../home/home.component'\n\nimport {\n  BackgroundImage,\n  BackgroundImageContainer,\n  ChildContainer,\n  ListContainer,\n} from './movie-list.styles';\nimport NoImage from '../../no-image/no-image.component';\nimport ThemedButton from '../../button/button.component';\n\n// Incoming props.\ninterface Props {\n  movieList: briefMovieInfo[],\n  selectedMovie: detailedMovieInfo,\n  onSelectMovie: any,\n  setScrolling: (val: boolean) => void\n  setScrollingTop: (val: number) => void\n  addToPlayList: (val: string) => void\n  removeFromPlaylist: (val:string) => void,\n  playlist: string[]\n}\n\n// Displays the search results.\nclass MovieList extends React.Component<Props, {}> {\n\n  // Handles the scroll behavior of the window.\n  componentDidMount() {\n    window.addEventListener(\n      'scroll',\n      (e: Event) => {\n        const targetDiv = e.currentTarget as Window;\n        const scrollTopValue = targetDiv.scrollY;\n        let { setScrolling, setScrollingTop } = this.props;\n        scrollTopValue >= 10 ? setScrolling(true) : setScrolling(false);\n        setScrollingTop(scrollTopValue)\n      },\n    );\n  }\n  render() {\n    const { movieList, selectedMovie, addToPlayList, playlist, removeFromPlaylist } = this.props;\n    const {\n      Title,\n      Released,\n      Genre,\n      Country,\n      Runtime,\n      imdbRating,\n      Rated,\n      Poster,\n      Plot,\n      Language,\n      Director,\n      Awards,\n      Actors,\n      imdbID\n    } = selectedMovie;\n    return (\n      movieList.length!== 0?\n        <ListContainer>\n        {/* Displays the information of the selected movie */}\n        <BackgroundImageContainer key={Title}>\n          <div className='left-detail'>\n            <label className='title' >\n              {Title}\n            </label>\n            <div className='sub-details'>\n              <div>\n                <label>Genre</label>\n                <label>{Genre}</label>\n              </div>\n              <div>\n                <label>Released</label>\n                <label>{Released}</label>\n              </div>\n              <div>\n                <label>Country</label>\n                <label>{Country}</label>\n              </div>\n              <div>\n                <label>Awards</label>\n                <label>{Awards}</label>\n              </div>\n              </div>\n              <div className='button'>\n              {!playlist.includes(imdbID)?<ThemedButton padding='10px 5px' action={() => addToPlayList(imdbID)}>\n                  Add to Playlist\n                </ThemedButton> :\n                  <ThemedButton padding='10px 5px' action={() => removeFromPlaylist(imdbID)}>\n                    Remove from Playlist\n                  </ThemedButton>\n                }\n                \n                </div>\n          </div>\n          <BackgroundImage>\n            <div className='image-cover top'>\n              <label>{Runtime}</label>\n            </div>\n\n            <div className='image-cover right'>\n              <div className='star'></div>\n              <label>{imdbRating}</label>\n            </div>\n            <div className='image-cover left'>\n              <label>{Rated}</label>\n            </div>\n              {Poster !== 'N/A' ? <img src={Poster} alt='selected-movie' /> :\n                <div className='no-image'><NoImage></NoImage></div>}\n          </BackgroundImage>\n          <div className='right-detail'>\n            <div className='item'>\n              <label>Director</label>\n              <label>{Director}</label>\n            </div>\n            <div className='item'>\n            <label>Available in</label>\n              <label>{Language}</label>\n            </div>\n            <div className='item'>\n              <label>Cast</label>\n              <label>{Actors}</label>\n            </div>\n            <div className='plot'>\n              <label>Plot</label>\n              <label>{Plot}</label>\n            </div>\n          </div>\n          </BackgroundImageContainer>\n\n        {/* Displays the list of movies searched by the user */}\n        <ChildContainer>\n          <MovieListChild {...this.props}/>\n        </ChildContainer>\n      </ListContainer> :\n        <Home></Home>\n    );\n  }\n}\n\nexport default MovieList;\n","import axios from 'axios';\n\nconst APIKEY = '1fb9c0d8';\n// API\nexport default axios.create({\n  baseURL: `https://www.omdbapi.com/`,\n  params: {\n    apikey: APIKEY,\n  },\n});\n","import styled from 'styled-components';\nimport { devices } from '../../../utils/screen-sizes';\n\nexport const PlayListContainer = styled.div`\n  display: flex;\n  position: relative;\n  flex-direction: column;\n  width: 100vw;\n  height: 90vh;\n  background: radial-gradient(purple, black, black);\n  .list-view {\n    display: flex;\n    margin: 0 20px;\n    margin-top: 5rem;\n    flex-wrap: wrap;\n    overflow-y: auto;\n    .movie {\n      flex: 1 0 200px;\n      max-width: 200px;\n      min-height: 250px;\n      margin: 10px;\n    }\n  }\n  .buttons {\n    display: flex;\n    justify-content: center;\n    * {\n      margin: 10px;\n      label {\n        font-size: medium;\n        font-weight: 500;\n\n        :hover {\n          cursor: pointer;\n        }\n      }\n    }\n  }\n\n  @media ${devices.mobileL} {\n    height: 100vh;\n    overflow: hidden;\n    .list-view {\n      display: flex;\n      height: 70%;\n      margin-top: 8%;\n      overflow-y: auto;\n      overscroll-behavior: contain;\n      .movie {\n        flex: 1 0 100%;\n        max-width: 100%;\n        min-height: 100px;\n      }\n    }\n    .buttons {\n      margin-top: 20px;\n      * {\n        label {\n          font-size: 0.9rem;\n          font-weight: 500;\n          :hover {\n            cursor: pointer;\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport const EmptyPlayList = styled.div`\n  position: fixed;\n  height: 100vh;\n  width: 100vw;\n  text-align: center;\n  color: white;\n  label {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n  }\n`;\n","import React from 'react';\nimport { EmptyPlayList, PlayListContainer} from './movie-playlist.styles'\nimport { briefMovieInfo} from '../../../utils/interfaces'\nimport omdb from '../../../api/omdb';\nimport MovieItem from '../movie-item/movie-item.component';\nimport ThemedButton from '../../button/button.component'\n\n// Incoming props.\ninterface Props{\n  addToPlayList: (val: string) => void,\n  removeFromPlaylist: (val: string) => void,\n  clearPlaylist: () => void,\n  playlist: string[]\n}\n\n// Playlist type.\ninterface State{\n  movies: briefMovieInfo[]\n}\n\n// Playlist component\n// Displays the list of movies selected by the user.\nclass MoviePlayList extends React.Component<Props, State> {\n  state = {\n    movies: []\n  }\n  static getDerivedStateFromProps(props: Props, state: State) {\n    // We will use this life cycle in order to update the local state\n    // whenever prop change., i.e., only when the item is deleted from\n    // Checkout.\n    const filtered = state.movies.filter(movie => props.playlist.includes(movie.imdbID))\n    return {\n      movies: filtered\n    }\n  }\n\n  // Performs API request to obtain the movie details using the id's in the\n  // Playlist.\n  componentDidMount() {\n    this.props.playlist.map(async id => {\n      let movieDetail = await omdb.get('/', {\n        params: {\n          i: id\n        }\n      })\n      this.setState({movies: [...this.state.movies, movieDetail.data]})\n    })\n  }\n\n  // Confirms the playlist.\n  confirmPlayList = () => {\n    console.log('Confirm Playlist');\n    alert('Playlist Confirmed!!')\n  }\n\n  render() {\n    const { movies } = this.state;\n    return <PlayListContainer>\n      <div className='list-view'>\n        {movies ? movies.map((movie, idx) => (\n          <span className='movie' key={idx}>\n            <MovieItem movie={movie} {...this.props} />\n          </span>\n        )) : <React.Fragment></React.Fragment>}\n      </div>\n      {this.state.movies.length!==0?<div className='buttons'>\n        <ThemedButton padding='5px 15px' action={this.confirmPlayList}>\n          <label>Confirm Playlist</label>\n        </ThemedButton>\n        <ThemedButton padding='5px 15px' action={this.props.clearPlaylist}>\n          <label>Clear Playlist</label>\n        </ThemedButton>\n      </div> : <EmptyPlayList>\n          <label>Your playlist is empty</label>\n      </EmptyPlayList>}\n      </PlayListContainer>\n  }\n};\n\nexport default MoviePlayList;\n","import styled from 'styled-components';\nimport { devices } from '../../utils/screen-sizes';\n\ninterface Props {\n  color: string;\n}\nexport const RouterContainer = styled.div``;\n\nexport const Footer = styled.div<Props>`\n  background: ${(props) => props.color};\n  text-align: center;\n  color: white;\n  height: 50px;\n\n  @media ${devices.mobileL} {\n    margin: 0 auto;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const EmptyContainer = styled.div`\n  position: relative;\n  color: white;\n  width: 100vw;\n  height: 100vh;\n  text-align: center;\n  .text {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    .site {\n      font-weight: 700;\n      font-size: 3rem;\n      text-shadow: 1px 5px 10px white;\n      letter-spacing: 10px;\n      margin-bottom: 10px;\n    }\n  }\n`;\n","import { EmptyContainer } from './not-found.styles'\n\n// 404 default page, if wrong path is accessed inside this application.\nconst NotFound = () => {\n    return (\n        <EmptyContainer>\n            <div className='text'>\n                <div className='site'>OMBD</div>\n                <div className='err'>(404) Page not found</div>\n            </div>\n        </EmptyContainer>\n    );\n};\n\nexport default NotFound;","import Header from '../header/header.component';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport MovieList from '../movies/movie-list/movie-list.component';\nimport React from 'react';\nimport omdb from '../../api/omdb';\nimport MoviePlayList from '../movies/movie-playlist/movie-playlist.component';\nimport { briefMovieInfo, detailedMovieInfo} from '../../utils/interfaces'\nimport { Footer, RouterContainer } from './app.styles';\nimport NotFound from '../not-found/not-found.component'\n\ninterface Props{ }\n\n// App component state interface\ninterface MyState {\n  playList: string[],\n  movieList: briefMovieInfo[],\n  movie: briefMovieInfo,\n  selectedMovie: detailedMovieInfo,\n  isScrolledBottom: boolean,\n  scrollingTopvalue:  number\n}\n\nexport default class App extends React.Component<Props, MyState> {\n  constructor(props: Props) {\n    super(props);\n    \n    // Initializes state values.\n    this.state = {\n      playList: [],\n      movieList: [],\n      movie: {\n        Title: '',\n        Poster: '',\n        Year: '',\n        imdbID: ''\n      },\n      selectedMovie: {\n        Title: '',\n        Year: '',\n        Rated: '',\n        Released: '',\n        Runtime: '',\n        Genre: '',\n        Director: '',\n        Writer: '',\n        Actors: '',\n        Plot: '',\n        Language: '',\n        Country: '',\n        Awards: '',\n        Poster: '',\n        imdbID: '',\n        imdbRating: '',\n      },\n      isScrolledBottom: false,\n      scrollingTopvalue: 0,\n    };\n  }\n  \n  // Sets scrollingTop values.\n  setScrollingTopValue = (val: number) => {\n    this.setState({scrollingTopvalue: val})\n  }\n\n  // Checks if the page is scrolled.\n  setIsScrolling = (val: boolean) => {\n    this.setState({ isScrolledBottom: val });\n  };\n\n  // Gathes full details of the movie using id.\n  getFullDetailsOfTheMovie = async (movie: briefMovieInfo) => {\n    // gets the imdbID from the initial movie from the list.\n    const imdbId = movie.imdbID;\n\n    // Get the initial selected movie full details.\n    const movieDetails = await omdb.get('/', {\n      params: {\n        i: imdbId,\n        plot: 'full',\n      },\n    });\n\n    // Sets the inital movie with full detials to the state as the selected\n    // movie.\n    if (movieDetails.status === 200 && movieDetails.data) {\n      this.setState({\n        selectedMovie: movieDetails.data,\n      });\n    }\n  };\n\n  // Gets the short detailed movie object and Obtains full details of the\n  // movie.\n  setSelectMovie = (movie: briefMovieInfo) => {\n    this.getFullDetailsOfTheMovie(movie);\n  };\n\n  // Add the movie id to the playlist.\n  // Parameter: val: imdbID\n  addToPlaylist = (val: string) => {\n    if (!this.state.playList.includes(val)) {\n      this.setState({ playList: [...this.state.playList, val] });\n    }\n  }\n\n  // Remove the item from the playlist.\n  removeFromPlaylist = (val: string) => {\n    if (this.state.playList.includes(val)) {\n      this.setState({ playList: this.state.playList.filter(id => id!==val) });\n    }\n  }\n\n  // Clears entire playlist.\n  clearPlaylist = () => {\n    this.setState({playList: []})\n  }\n\n  // Gets the list of movies using omdb api.\n  onSearchSubmit = async (text: string) => {\n    // API request to omdb api.\n    const moviesList = new Promise<any>(async (resolve, reject) => {\n      const response = await omdb.get('/', {\n        params: {\n          s: text,\n          plot: 'full',\n        },\n      });\n      const response_status = response.status;\n      const data_status = response.data.Response;\n      if (response_status === 200 && data_status === 'True') {\n        resolve(response.data.Search);\n      } else if (response_status === 200 && data_status === 'False') {\n        reject(response.data.Error);\n      }\n    });\n\n    moviesList.then(async (data) => {\n      // Stores the movies list in the state.\n      let incomingData = data as briefMovieInfo[];\n      // Removes duplicates\n      let filteredData = incomingData.filter(movie => movie.imdbID)\n      this.setState({\n        movieList: filteredData,\n      });\n\n      this.getFullDetailsOfTheMovie(data[0]);\n    }).catch(err => {\n      console.log(err);\n      alert('Movie not found')\n    })\n  };\n\n  render() {\n    const { isScrolledBottom, scrollingTopvalue, playList, movieList, selectedMovie } = this.state;\n    return (\n      <RouterContainer>\n        <BrowserRouter>\n          <Header\n            handleSubmit={this.onSearchSubmit}\n            isScrolling={isScrolledBottom}\n            scrollingTopValue={scrollingTopvalue}\n            numOfItems={playList.length}\n          />\n          <div>\n            <Routes>\n              <Route\n                path='/fast_omdb/'\n                element={\n                  <MovieList\n                    playlist={playList}\n                    addToPlayList={this.addToPlaylist}\n                    removeFromPlaylist={this.removeFromPlaylist}\n                    setScrollingTop={this.setScrollingTopValue }\n                    setScrolling={this.setIsScrolling}\n                    movieList={movieList}\n                    selectedMovie={selectedMovie}\n                    onSelectMovie={this.setSelectMovie}\n                  />\n                }\n              />\n              <Route\n                path='/fast_omdb/playlist'\n                element={\n                  <MoviePlayList\n                    playlist={playList}\n                    addToPlayList={this.addToPlaylist}\n                    removeFromPlaylist={this.removeFromPlaylist}\n                    clearPlaylist={() => this.setState({playList:[]}) }\n                  />\n                }\n              />\n              <Route path='*' element={<NotFound />} />\n            </Routes>\n          </div>\n          <Footer color='red'>\n            My favorite color is red\n          </Footer>\n        </BrowserRouter>\n      </RouterContainer>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/app.component';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}