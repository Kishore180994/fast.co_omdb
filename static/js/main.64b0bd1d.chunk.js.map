{"version":3,"sources":["components/searchbar/search.styles.ts","components/searchbar/search.component.tsx","utils/screen-sizes.ts","components/header/header.styles.ts","components/header/header.component.tsx","components/movies/movie-list-child/movie-list-child.styles.ts","components/button/button.styles.ts","components/button/button.component.tsx","components/no-image/no-image.styles.ts","components/no-image/no-image.component.tsx","components/movies/movie-item/movie-item.styles.ts","components/movies/movie-item/movie-item.component.tsx","components/movies/movie-list-child/movie-list-child.component.tsx","components/home/home.styles.ts","components/home/home.component.tsx","components/movies/movie-list/movie-list.styles.ts","components/movies/movie-list/movie-list.component.tsx","api/omdb.js","components/movies/movie-playlist/movie-playlist.styles.ts","components/movies/movie-playlist/movie-playlist.component.tsx","components/app/app.styles.ts","components/not-found/not-found.styles.ts","components/not-found/not-found.component.tsx","components/app/app.component.tsx","index.tsx"],"names":["SearchField","styled","div","InputContainer","SearchBar","onSubmit","useState","term","setTerm","navigate","useNavigate","e","preventDefault","type","placeholder","value","onChange","target","sizes","devices","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop","maxtop","HeaderContainer","props","scrollTopVal","SearchContainer","Logo","Link","PlayList","Header","scrollingTopValue","handleSubmit","to","Perimeter","MovieListContainer","MovieListItem","ButtonContainer","button","padding","ThemedButton","children","action","onClick","NoImageContainer","NoImage","className","ItemContainer","ImageContainer","MovieDetails","PlayListIcon","MovieItem","movie","addToPlayList","playlist","removeFromPlaylist","console","log","stopPropagation","id","imdbID","includes","Poster","src","alt","Title","MovieListChild","movieList","onSelectMovie","myRef","useRef","atEnd","setAtEnd","atStart","setAtStart","Fragment","ref","onScroll","currentEl","currentTarget","reachedEnd","scrollLeft","clientWidth","scrollWidth","isAtStart","map","idx","HomeContainer","Home","moveInLeft","keyframes","moveInBottom","buttonMoveIn","moveInRight","ListContainer","ChildContainer","StyledButton","width","marginTop","BackgroundImageContainer","BackgroundImage","MovieList","window","addEventListener","scrollTopValue","scrollY","setScrolling","setScrollingTop","this","selectedMovie","Released","Genre","Country","Runtime","imdbRating","Rated","Plot","Language","Director","Awards","Actors","length","React","Component","axios","create","baseURL","params","apikey","PlayListContainer","EmptyPlayList","MoviePlayList","state","movies","confirmPlayList","alert","a","omdb","get","i","movieDetail","setState","data","clearPlaylist","filter","RouterContainer","Footer","color","EmptyContainer","NotFound","App","setScrollingTopValue","val","scrollingTopvalue","setIsScrolling","isScrolledBottom","getFullDetailsOfTheMovie","imdbId","plot","movieDetails","status","setSelectMovie","addToPlaylist","playList","onSearchSubmit","text","moviesList","Promise","resolve","reject","s","response","response_status","data_status","Response","Search","Error","then","Year","Writer","isScrolling","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.64b0bd1d.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const SearchField = styled.div`\n  width: 100%;\n  height: 100%;\n  form {\n    height: 100%;\n    width: 100%;\n  }\n`;\n\nexport const InputContainer = styled.div`\n  height: 100%;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: 1px solid black;\n  border-radius: 10px;\n  background: white;\n  margin: 5px 0;\n  input {\n    border: 0;\n    width: 90%;\n    padding: 5px 0;\n    transition: all 0.2s;\n    background: white;\n    font-family: inherit;\n    font-size: inherit;\n    color: inherit;\n    :focus {\n      outline: none;\n    }\n  }\n`;\n","import React, { ChangeEvent, FormEvent, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { InputContainer, SearchField } from './search.styles';\n\ninterface Props {\n  onSubmit: (term: string) => void\n}\n\nconst SearchBar: React.FC<Props> = ({ onSubmit}) => {\n  const [term, setTerm] = useState('');\n  let navigate = useNavigate();\n  const onInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setTerm(e.target.value)\n  };\n\n  const onFormSubmit = (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    onSubmit(term);\n    navigate(`/fast_omdb/`);\n  };\n  return (\n    <SearchField>\n      <form onSubmit={onFormSubmit}>\n        <InputContainer>\n          <input\n            type='text'\n            placeholder='Search by title'\n            value={term}\n            onChange={onInputChange}\n          />\n        </InputContainer>\n      </form>\n    </SearchField>\n  );\n} \n\n// class SearchBar extends React.Component<Props, State> {\n//   state = { term: '' };\n\n//   onInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n//     this.setState({ term: e.target.value });\n//   };\n\n//   onFormSubmit = (e: FormEvent<HTMLFormElement>) => {\n//     e.preventDefault();\n//     this.props.onSubmit(this.state.term);\n\n//   };\n\n//   render() {\n//     return (\n//       <SearchField>\n//         <form onSubmit={this.onFormSubmit}>\n//           <InputContainer>\n//             <input\n//               type='text'\n//               placeholder='Search by title'\n//               value={this.state.term}\n//               onChange={this.onInputChange}\n//             />\n//           </InputContainer>\n//         </form>\n//       </SearchField>\n//     );\n//   }\n// }\n\nexport default SearchBar;\n","// Breakpoints\nexport const sizes = {\n  mobileS: '320px',\n  mobileM: '375px',\n  mobileL: '425px',\n  tablet: '768px',\n  laptop: '1024px',\n  laptopL: '1440px',\n  desktop: '2560px',\n};\n\n// Devices\nexport const devices = {\n  mobileS: `(max-width: ${sizes.mobileS})`,\n  mobileM: `(max-width: ${sizes.mobileM})`,\n  mobileL: `(max-width: ${sizes.mobileL})`,\n  tablet: `(min-width: ${sizes.tablet})`,\n  laptop: `(min-width: ${sizes.laptop})`,\n  laptopL: `(min-width: ${sizes.laptopL})`,\n  desktop: `(min-width: ${sizes.desktop})`,\n  maxtop: `(min-height: ${sizes.laptop})`,\n};\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { devices } from '../../utils/screen-sizes';\n\ninterface Props {\n  scrollTopVal: number;\n}\n\nexport const HeaderContainer = styled.div<Props>`\n  display: flex;\n  position: sticky;\n  top: 0;\n  height: 55px;\n  width: 100vw;\n  align-items: center;\n  justify-content: space-between;\n  z-index: 99;\n  ${(props) =>\n    `background: rgba(128,${100 - props.scrollTopVal},128, ${\n      props.scrollTopVal / 100\n    })`}\n`;\n\nexport const SearchContainer = styled.div`\n  flex-basis: 40%;\n  @media ${devices.mobileL} {\n    flex-basis: 35%;\n  }\n  @media ${devices.mobileS} {\n    flex-basis: 30%;\n    font-size: 0.6rem;\n  }\n`;\n\nexport const Logo = styled(Link)`\n  position: relative;\n  height: auto;\n  margin-left: 1rem;\n  border-radius: 10%;\n  font-size: 1.5rem;\n  font-weight: 900;\n  letter-spacing: 0.1px;\n  background: linear-gradient(to left, #f2db83, black);\n  font-stretch: wider;\n  transform: scale(1, 1.2);\n  flex-shrink: 0;\n  background-clip: text;\n  -webkit-background-clip: text;\n  color: transparent;\n  @media ${devices.mobileL} {\n    font-size: 1rem;\n    background: linear-gradient(to left, #f2db83, white);\n    background-clip: text;\n    -webkit-background-clip: text;\n    color: transparent;\n  }\n\n  @media ${devices.mobileS} {\n    font-size: 1rem;\n  }\n`;\n\nexport const PlayList = styled(Link)`\n  color: white;\n  border: 1px solid wheat;\n  width: 5rem;\n  text-align: center;\n  padding: 10px 15px;\n  margin: 5px 0;\n  margin-right: 25px;\n  box-shadow: inset 1px 1px white;\n\n  :hover {\n    cursor: pointer;\n    transform: translateY(-1px);\n    box-shadow: 1px 2px white;\n  }\n  :active {\n    transform: translateY(0px);\n    box-shadow: inset 1px 1px white;\n  }\n\n  @media ${devices.mobileL} {\n    padding: 6px 8px;\n    margin-right: 15px;\n    font-size: small;\n  }\n  @media ${devices.mobileS} {\n    font-size: 0.6rem;\n  }\n`;\n","import React from 'react';\nimport Search from '../searchbar/search.component';\nimport { HeaderContainer, Logo, PlayList, SearchContainer } from './header.styles';\n\ninterface Props {\n  handleSubmit: (text: string) => Promise<void>,\n  scrollingTopValue: number,\n  isScrolling: boolean\n}\n\nconst Header: React.FC<Props> = ({scrollingTopValue, handleSubmit}) => {\n  return (\n    <HeaderContainer scrollTopVal={scrollingTopValue }>\n      <Logo to='/fast_omdb/'>OMDb</Logo>\n      <SearchContainer>\n        <Search onSubmit={handleSubmit} />\n      </SearchContainer>\n      <PlayList to='/fast_omdb/playlist'>Playlist</PlayList>\n    </HeaderContainer>\n  );\n};\n\nexport default Header;\n","import styled from 'styled-components';\nimport { devices } from '../../../utils/screen-sizes';\n\nexport const Perimeter = styled.div`\n  position: relative;\n  .left {\n    content: '';\n    display: block;\n    position: absolute;\n    z-index: 1;\n    top: 0;\n    left: 0;\n    width: 100px;\n    height: 100%;\n    background: linear-gradient(to right, black, transparent);\n    @media ${devices.mobileL} {\n      display: none;\n    }\n  }\n\n  .right {\n    content: '';\n    display: block;\n    position: absolute;\n    z-index: 1;\n    top: 0;\n    right: 0;\n    width: 100px;\n    height: 100%;\n    background: linear-gradient(to left, black, transparent);\n    @media ${devices.mobileL} {\n      display: none;\n    }\n  }\n`;\n\nexport const MovieListContainer = styled.div`\n  position: relative;\n  display: flex;\n  overflow-y: auto;\n\n  @media ${devices.maxtop} {\n    overflow: hidden;\n    flex-wrap: wrap;\n    margin: 20px;\n  }\n\n  @media ${devices.mobileL} {\n    flex-direction: column;\n  }\n`;\n\nexport const MovieListItem = styled.div`\n  width: 200px;\n  margin: 10px 5px;\n  flex-shrink: 0;\n  &:hover {\n    cursor: pointer;\n  }\n  @media ${devices.maxtop} {\n    margin: 10px;\n    border: 2px solid black;\n    box-shadow: 1px 1px 4px black;\n  }\n\n  @media ${devices.mobileL} {\n    width: 100%;\n    margin: 10px;\n  }\n`;\n","import styled from 'styled-components';\nimport { devices } from '../../utils/screen-sizes';\n\ninterface Props {\n  padding: string;\n}\n\nexport const ButtonContainer = styled.button<Props>`\n  padding: ${(props) => props.padding};\n  color: white;\n  background: purple;\n  box-shadow: inset 1px 1px 4px white;\n  :hover {\n    cursor: pointer;\n    box-shadow: 1px 1px 7px white;\n  }\n  :active {\n    box-shadow: inset 1px 1px 4px white;\n  }\n\n  @media ${devices.mobileL} {\n    text-align: center;\n  }\n`;\n","import React, { MouseEventHandler } from 'react';\nimport { ButtonContainer } from './button.styles';\n\ninterface Props{\n    padding: string,\n    action: MouseEventHandler<HTMLButtonElement>\n}\n\nconst ThemedButton: React.FC<Props> = ({padding, children, action}) => {\n    return (\n        <ButtonContainer padding={padding} onClick={action}>\n            {children}\n        </ButtonContainer>\n    );\n};\n\nexport default ThemedButton;","import styled from 'styled-components';\n\nexport const NoImageContainer = styled.div`\n  position: relative;\n  height: 100%;\n  width: 100%;\n  border: 1px solid white;\n  color: black;\n  background: white;\n  .title {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    text-align: center;\n    .a {\n      font-weight: 700;\n      letter-spacing: 2px;\n    }\n    .b {\n      font-size: 0.7rem;\n    }\n  }\n`;\n","import React from 'react';\nimport { NoImageContainer } from './no-image.styles';\n\nconst NoImage:React.FC = () => {\n    return (\n        <NoImageContainer>\n            <div className='title'>\n                <div className='a'>OMDb</div>\n                <div className='b'>(fast.co)</div>\n            </div>\n            \n        </NoImageContainer>\n    );\n};\n\nexport default NoImage;","import styled from 'styled-components';\nimport { devices } from '../../../utils/screen-sizes';\n\nexport const ItemContainer = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  height: 300px;\n  border: 1px solid black;\n\n  :hover {\n    cursor: pointer;\n  }\n\n  .focus {\n    position: absolute;\n    top: 0;\n    right: 0;\n    width: 100%;\n    height: 85%;\n    * {\n      display: contents;\n    }\n    .playlist-button {\n      border: 1px solid black;\n      position: absolute;\n      top: 0;\n      width: 0px;\n      padding: 0px;\n      background: none;\n      * {\n        display: none;\n      }\n      &:hover,\n      * > :hover {\n        cursor: pointer;\n        box-shadow: 1px 1px 5px black;\n      }\n\n      &:active,\n      * > :active {\n        box-shadow: inset 1px 1px 5px black;\n      }\n    }\n    &:hover {\n      background: linear-gradient(to top, black, transparent, transparent);\n      * {\n        display: block;\n      }\n    }\n  }\n\n  @media ${devices.mobileL} {\n    flex-direction: row;\n    width: 95%;\n    height: 150px;\n    box-shadow: 1px 1px 15px purple;\n    overflow-y: auto;\n    position: relative;\n    overflow: hidden;\n    .focus {\n      position: absolute;\n      top: 0;\n      right: 0;\n      width: 100%;\n      height: 85%;\n      * {\n        display: block;\n      }\n      .playlist-button {\n        top: auto;\n        bottom: 0;\n        left: auto;\n        right: 60px;\n        width: 0px;\n        padding: 0px;\n        * {\n          display: block;\n        }\n      }\n      &:hover {\n        background: none;\n      }\n    }\n\n    :active {\n      box-shadow: 1px 1px 15px white;\n    }\n  }\n`;\n\nexport const ImageContainer = styled.div`\n  img,\n  .no-image {\n    height: 250px;\n    width: 100%;\n  }\n  @media ${devices.mobileL} {\n    flex: 1 1 30%;\n    img,\n    .no-image {\n      height: 150px;\n      width: 100%;\n    }\n  }\n`;\n\nexport const MovieDetails = styled.div`\n  text-align: center;\n  background: black;\n  color: white;\n  height: 50px;\n  overflow-x: hidden;\n  overflow-y: auto;\n  @media ${devices.mobileL} {\n    flex: 1 1 50%;\n    height: 150px;\n    padding: 0 10px;\n    div {\n      padding: 10px 0;\n    }\n  }\n`;\n\nexport const PlayListIcon = styled.div`\n  position: relative;\n  height: 20px;\n  width: 20px;\n  margin: 0;\n  background: white;\n  div {\n    position: absolute;\n    top: 3px;\n    left: 4px;\n    height: 15px;\n    width: 12px;\n    background: black;\n    box-shadow: inset 1px 1px 4px white;\n  }\n  .play {\n    clip-path: polygon(100% 50%, 0 0, 0 100%);\n  }\n  .delete {\n    clip-path: polygon(\n      20% 0%,\n      0% 20%,\n      30% 50%,\n      0% 80%,\n      20% 100%,\n      50% 70%,\n      80% 100%,\n      100% 80%,\n      70% 50%,\n      100% 20%,\n      80% 0%,\n      50% 30%\n    );\n  }\n  @media ${devices.mobileL} {\n    width: 18px;\n    div {\n      top: 10%;\n      left: 20%;\n    }\n  }\n`;\n","import React, { MouseEventHandler } from 'react';\nimport ThemedButton from '../../button/button.component';\nimport NoImage from '../../no-image/no-image.component'\nimport {\n  ImageContainer,\n  ItemContainer,\n  MovieDetails,\n  PlayListIcon,\n} from './movie-item.styles';\n\ninterface Props {\n  movie: {\n    Poster: string,\n    Title: string,\n    imdbID: string,\n  },\n  addToPlayList: (val:string) => void,\n  removeFromPlaylist: (val:string) => void\n  playlist: string[],\n}\n\n\nconst MovieItem: React.FC<Props> = ({ movie, addToPlayList, playlist, removeFromPlaylist }) => {\n  const addOrRemoveFromPlayList: MouseEventHandler<HTMLButtonElement> = (e) => {\n    e.stopPropagation()\n    const id = movie.imdbID;\n    // We are basically performing toggle operation.\n    playlist.includes(id) ? removeFromPlaylist(id) : addToPlayList(id);\n  }\n  console.log(movie)\n  return (\n    <ItemContainer> \n      <div className='focus'>\n        <div className='playlist-button'>\n        <ThemedButton padding='7px 7px' action={addOrRemoveFromPlayList}>\n          <PlayListIcon>\n            {!playlist.includes(movie.imdbID) ?\n              <div className='play'></div> :\n              <div className='delete'></div>}\n          </PlayListIcon>\n        </ThemedButton>\n        </div>\n      </div>\n      <ImageContainer>\n        {movie.Poster !== 'N/A' ?\n          <img src={movie.Poster} alt={movie.Title} /> :\n          <div className='no-image'><NoImage/></div>}\n      </ImageContainer>\n      <MovieDetails>\n        <div>{movie.Title}</div>\n      </MovieDetails>\n    </ItemContainer>\n  );\n};\n\nexport default MovieItem;\n","import React, { UIEventHandler, useRef, useState } from 'react';\nimport { MovieListItem, MovieListContainer, Perimeter } from './movie-list-child.styles';\nimport MovieItem from '../movie-item/movie-item.component';\nimport { briefMovieInfo, detailedMovieInfo } from '../../../utils/interfaces';\n\ninterface Props {\n    movieList: briefMovieInfo[],\n    selectedMovie: detailedMovieInfo,\n    onSelectMovie: any,\n    setScrolling: (val: boolean) => void,\n    setScrollingTop: (val: number) => void,\n    addToPlayList: (val: string) => void,\n    removeFromPlaylist: (val:string) => void,\n    playlist: string[]\n  }\n  \nconst MovieListChild: React.FC<Props> = ({ movieList, onSelectMovie, playlist, addToPlayList, removeFromPlaylist }) => {\n    const myRef = useRef(null);\n    const [atEnd, setAtEnd] = useState(false)\n    const [atStart, setAtStart] = useState(true)\n    const getScrollPosition:UIEventHandler<HTMLDivElement> = (e) => {\n        const currentEl = e.currentTarget as HTMLDivElement;\n        let reachedEnd: boolean = currentEl.scrollLeft+currentEl.clientWidth >= currentEl.scrollWidth-100? true: false;\n        setAtEnd(reachedEnd);\n        let isAtStart: boolean = currentEl.scrollLeft <= 100 ? true : false;\n        setAtStart(isAtStart);\n    }\n    \n    return (\n        <Perimeter>\n            {!atStart?<div className='left'></div>:<React.Fragment></React.Fragment>}\n            <MovieListContainer ref={myRef} onScroll={getScrollPosition}>\n            {movieList ? (\n            movieList.map((movie, idx) => (\n              <MovieListItem\n                key={idx}\n                onClick={() => onSelectMovie(movie)}>\n                    <MovieItem movie={movie} playlist={playlist} addToPlayList={addToPlayList} removeFromPlaylist={removeFromPlaylist}/>\n              </MovieListItem>\n            ))\n          ) : (\n            <React.Fragment>No Match Found!!</React.Fragment>\n            )}    \n            </MovieListContainer>\n            {!atEnd?<div className='right'></div>:<React.Fragment></React.Fragment>}\n        </Perimeter>\n    );\n};\n\nexport default MovieListChild;","import styled from 'styled-components';\n\nexport const HomeContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100vw;\n  height: 100vh;\n  text-align: center;\n  justify-content: center;\n  align-items: center;\n  background: radial-gradient(purple, black, black);\n  color: white;\n\n  .omdb {\n    font-weight: 700;\n    font-size: 4rem;\n    background: linear-gradient(to left, #f2db83, black);\n    background-clip: text;\n    -webkit-background-clip: text;\n    color: transparent;\n  }\n  .sub {\n    font-size: 1.5rem;\n    font-weight: 900;\n    text-shadow: 1px 1px 4px #f2db83;\n    color: black;\n  }\n`;\n","import React from 'react';\nimport { HomeContainer } from './home.styles';\n\nconst Home = () => {\n    return (\n        <HomeContainer>\n            <label className='omdb'>OMDb</label>\n            <label className='sub'>Search your favorite movie</label>\n        </HomeContainer>\n    );\n};\n\nexport default Home;","import styled, { keyframes } from 'styled-components';\nimport { devices } from '../../../utils/screen-sizes';\n\ninterface Props {\n  width: string;\n  marginTop: string;\n}\n\nconst moveInLeft = keyframes`\n   from {transform: translateX(-100px);}\n    to {transform: translateX(0px);}\n`;\n\nconst moveInBottom = keyframes`\n   from {transform: translateY(100px);color: transparent; display: none}\n    to {transform: translateY(0px);}\n`;\n\nconst buttonMoveIn = keyframes`\n   0% {transform: translateY(100px);opacity: 0;}\n   90% {transform: translateY(100px);opacity: 0;}\n    100% {transform: translateY(0px);}\n`;\n\nconst moveInRight = keyframes`\n   from {transform: translateX(100px);color: transparent}\n    to {transform: translateX(0px);}\n`;\n\nexport const ListContainer = styled.div`\n  overflow: auto;\n  overscroll-behavior: contain;\n  @media ${devices.mobileL} {\n    min-width: 350px;\n  }\n`;\n\nexport const ChildContainer = styled.div`\n  @media ${devices.mobileL} {\n    height: 60vh;\n    overflow: auto;\n  }\n`;\n\nexport const StyledButton = styled.button<Props>`\n  width: ${(props) => props.width}px;\n  margin-left: auto;\n  margin-top: ${(props) => props.marginTop}px;\n  margin-bottom: 20px;\n  padding: 10px 5px;\n  background: purple;\n  color: white;\n  box-shadow: inset 1px 0px 10px white;\n  animation: ${buttonMoveIn} 1s ease-in;\n  :hover {\n    cursor: pointer;\n    transform: translateY(-2px);\n    box-shadow: 1px 0px 10px white;\n  }\n\n  :active {\n    cursor: pointer;\n    transform: translateY(0px);\n    box-shadow: inset 1px 0px 10px white;\n  }\n  @media ${devices.mobileL} {\n    font-size: 0.6rem;\n    padding: 8px 8px;\n  }\n`;\n\nexport const BackgroundImageContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 20px;\n  background: radial-gradient(purple, black, black);\n  height: 30em;\n  color: white;\n  .left-detail {\n    display: flex;\n    flex-direction: column;\n    text-align: right;\n    flex: 1;\n    padding-right: 20px;\n    transition: all 1s;\n    overflow-y: auto;\n    .title {\n      display: block;\n      font-size: 3.5rem;\n      font-weight: 700;\n      word-wrap: break-word;\n      color: white;\n      animation: ${moveInLeft} 1s ease-in;\n    }\n    .sub-details {\n      /* border: 1px solid wheat; */\n      text-align: center;\n      display: flex;\n      flex-direction: column;\n      width: 70%;\n      margin-left: auto;\n      margin-top: 7%;\n      padding-right: 10px;\n      padding-top: 10px;\n      float: right;\n      animation: ${moveInBottom} 1s ease-in;\n      div {\n        display: flex;\n        padding-bottom: 20px;\n        label {\n          flex: 1;\n          text-align: left;\n        }\n        label:first-child {\n          text-align: right;\n          padding-right: 20px;\n          font-weight: 700;\n        }\n      }\n    }\n  }\n\n  .right-detail {\n    flex: 1;\n    padding-left: 20px;\n    margin-left: 10px;\n    margin-right: 20px;\n    margin-top: 40px;\n    overflow-y: auto;\n    animation: ${moveInRight} 1s ease-in;\n    .item {\n      display: flex;\n      padding-bottom: 20px;\n      label {\n        text-align: left;\n        width: 80%;\n      }\n      label:first-child {\n        text-align: right;\n        font-weight: 700;\n        padding-right: 20px;\n        width: 20%;\n      }\n    }\n    .plot {\n      border-top: 1px solid wheat;\n      display: flex;\n      flex-direction: column;\n      padding-top: 10px;\n      label:first-child {\n        font-weight: 700;\n        font-size: 1.1rem;\n        text-align: center;\n      }\n      label:last-child {\n        text-align: center;\n        padding: 10px;\n        overflow-y: auto;\n        height: 10%;\n      }\n    }\n  }\n\n  @media ${devices.mobileL} {\n    height: 40vh;\n    min-width: 95%;\n    box-shadow: inset 0 -5px 5px white;\n    position: relative;\n    overflow: auto;\n    .left-detail {\n      order: 1;\n      text-align: left;\n      padding-left: 20px;\n      height: 75%;\n      .title {\n        font-size: 1.3rem;\n      }\n      .sub-details {\n        width: 100%;\n        margin-top: 3%;\n        padding-top: 5px;\n        font-size: 0.7rem;\n        div {\n          padding-bottom: 20px;\n          label {\n            flex: 1;\n            text-align: left;\n          }\n          label:first-child {\n            text-align: left;\n            padding-right: 0px;\n          }\n        }\n      }\n\n      .button {\n        position: absolute;\n        right: 20px;\n        bottom: 0;\n      }\n    }\n    .right-detail {\n      display: none;\n    }\n  }\n`;\n\nexport const BackgroundImage = styled.div`\n  position: relative;\n  img,\n  .no-image {\n    z-index: -99;\n    height: 90%;\n    width: 300px;\n    box-shadow: 15px 15px 20px black;\n  }\n\n  .top {\n    position: absolute;\n    top: 0;\n    right: 0;\n    font-size: 80%;\n    font-weight: 700;\n    width: 20%;\n    height: 5%;\n    label {\n      display: block;\n      margin-top: 5px;\n    }\n  }\n\n  .left {\n    position: absolute;\n    bottom: 10%;\n    left: 0;\n    font-size: 1rem;\n    font-weight: 700;\n    width: 20%;\n    height: 5%;\n  }\n\n  .right {\n    position: absolute;\n    bottom: 10%;\n    right: 0;\n    font-size: 2rem;\n    font-weight: 700;\n    width: 20%;\n    height: 20%;\n  }\n\n  .image-cover {\n    display: flex;\n    z-index: 1;\n    background: rgba(255, 0, 255, 0.7);\n    color: white;\n    text-align: center;\n    flex-direction: column;\n    .star {\n      height: 50%;\n      background: gold;\n      margin: 5px 2px;\n      clip-path: polygon(\n        50% 0%,\n        61% 35%,\n        98% 35%,\n        68% 57%,\n        79% 91%,\n        50% 70%,\n        21% 91%,\n        32% 57%,\n        2% 35%,\n        39% 35%\n      );\n    }\n  }\n\n  @media ${devices.mobileL} {\n    width: 150px;\n    margin-left: 10px;\n    img,\n    .no-image {\n      max-width: 150px;\n      box-shadow: 1px 1px 20px white;\n    }\n    .top {\n      font-size: 75%;\n      height: 12%;\n    }\n    .left {\n      font-size: 0.7rem;\n      font-weight: 700;\n      width: 20%;\n      height: 11%;\n    }\n    .right {\n      font-size: 1rem;\n      font-weight: 700;\n      width: 20%;\n      height: 20%;\n    }\n  }\n`;\n","import React from 'react';\nimport { briefMovieInfo, detailedMovieInfo } from '../../../utils/interfaces';\nimport MovieListChild from '../movie-list-child/movie-list-child.component'\nimport Home from '../../home/home.component'\n\nimport {\n  BackgroundImage,\n  BackgroundImageContainer,\n  ChildContainer,\n  ListContainer,\n  StyledButton,\n} from './movie-list.styles';\nimport NoImage from '../../no-image/no-image.component';\n\ninterface Props {\n  movieList: briefMovieInfo[],\n  selectedMovie: detailedMovieInfo,\n  onSelectMovie: any,\n  setScrolling: (val: boolean) => void\n  setScrollingTop: (val: number) => void\n  addToPlayList: (val: string) => void\n  removeFromPlaylist: (val:string) => void,\n  playlist: string[]\n}\n\n\nclass MovieList extends React.Component<Props, {}> {\n  componentDidMount() {\n    window.addEventListener(\n      'scroll',\n      (e: Event) => {\n        const targetDiv = e.currentTarget as Window;\n        const scrollTopValue = targetDiv.scrollY;\n        let { setScrolling, setScrollingTop } = this.props;\n        scrollTopValue >= 10 ? setScrolling(true) : setScrolling(false);\n        setScrollingTop(scrollTopValue)\n      },\n    );\n  }\n  render() {\n    const { movieList, selectedMovie, addToPlayList, playlist, removeFromPlaylist } = this.props;\n    const {\n      Title,\n      Released,\n      Genre,\n      Country,\n      Runtime,\n      imdbRating,\n      Rated,\n      Poster,\n      Plot,\n      Language,\n      Director,\n      Awards,\n      Actors,\n      imdbID\n    } = selectedMovie;\n    return (\n      movieList.length!== 0?\n      <ListContainer>\n        <BackgroundImageContainer key={Title}>\n          <div className='left-detail'>\n            <label className='title' >\n              {Title}\n            </label>\n            <div className='sub-details'>\n              <div>\n                <label>Genre</label>\n                <label>{Genre}</label>\n              </div>\n              <div>\n                <label>Released</label>\n                <label>{Released}</label>\n              </div>\n              <div>\n                <label>Country</label>\n                <label>{Country}</label>\n              </div>\n              <div>\n                <label>Awards</label>\n                <label>{Awards}</label>\n              </div>\n              </div>\n              <div className='button'>\n              {!playlist.includes(imdbID)?<StyledButton width='120' marginTop='20' onClick={()=>addToPlayList(imdbID)}>\n                Add to Playlist\n              </StyledButton> :\n                <StyledButton width='120' marginTop='20' onClick={()=>removeFromPlaylist(imdbID)}>\n                  Remove from Playlist\n                </StyledButton>}\n                </div>\n          </div>\n          <BackgroundImage>\n            <div className='image-cover top'>\n              <label>{Runtime}</label>\n            </div>\n\n            <div className='image-cover right'>\n              <div className='star'></div>\n              <label>{imdbRating}</label>\n            </div>\n            <div className='image-cover left'>\n              <label>{Rated}</label>\n            </div>\n              {Poster !== 'N/A' ? <img src={Poster} alt='selected-movie' /> :\n                <div className='no-image'><NoImage></NoImage></div>}\n          </BackgroundImage>\n          <div className='right-detail'>\n            <div className='item'>\n              <label>Director</label>\n              <label>{Director}</label>\n            </div>\n            <div className='item'>\n            <label>Available in</label>\n              <label>{Language}</label>\n            </div>\n            <div className='item'>\n              <label>Cast</label>\n              <label>{Actors}</label>\n            </div>\n            <div className='plot'>\n              <label>Plot</label>\n              <label>{Plot}</label>\n            </div>\n          </div>\n          </BackgroundImageContainer>\n        <ChildContainer>\n          <MovieListChild {...this.props}/>\n        </ChildContainer>\n      </ListContainer> :\n        <Home></Home>\n    );\n  }\n}\n\nexport default MovieList;\n","import axios from 'axios';\n\nconst APIKEY = '1fb9c0d8';\nexport default axios.create({\n  baseURL: `https://www.omdbapi.com/`,\n  params: {\n    apikey: APIKEY,\n  },\n});\n","import styled from 'styled-components';\nimport { devices } from '../../../utils/screen-sizes';\n\nexport const PlayListContainer = styled.div`\n  display: flex;\n  position: relative;\n  flex-direction: column;\n  width: 100vw;\n  height: 90vh;\n  background: radial-gradient(purple, black, black);\n  .list-view {\n    display: flex;\n    margin: 0 20px;\n    margin-top: 5rem;\n    flex-wrap: wrap;\n    overflow-y: auto;\n    .movie {\n      flex: 1 0 200px;\n      max-width: 200px;\n      min-height: 250px;\n      margin: 10px;\n    }\n  }\n  .buttons {\n    display: flex;\n    justify-content: center;\n    * {\n      margin: 10px;\n      label {\n        font-size: medium;\n        font-weight: 500;\n\n        :hover {\n          cursor: pointer;\n        }\n      }\n    }\n  }\n\n  @media ${devices.mobileL} {\n    height: 100vh;\n    overflow: hidden;\n    .list-view {\n      display: flex;\n      height: 70%;\n      margin-top: 8%;\n      overflow-y: auto;\n      overscroll-behavior: contain;\n      .movie {\n        flex: 1 0 100%;\n        max-width: 100%;\n        min-height: 100px;\n      }\n    }\n    .buttons {\n      margin-top: 20px;\n      * {\n        label {\n          font-size: 0.9rem;\n          font-weight: 500;\n          :hover {\n            cursor: pointer;\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport const EmptyPlayList = styled.div`\n  position: fixed;\n  height: 100vh;\n  width: 100vw;\n  text-align: center;\n  color: white;\n  label {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n  }\n`;\n","import React from 'react';\nimport { EmptyPlayList, PlayListContainer} from './movie-playlist.styles'\nimport { briefMovieInfo} from '../../../utils/interfaces'\nimport omdb from '../../../api/omdb';\nimport MovieItem from '../movie-item/movie-item.component';\nimport ThemedButton from '../../button/button.component'\n\ninterface Props{\n  addToPlayList: (val: string) => void,\n  removeFromPlaylist: (val: string) => void,\n  clearPlaylist: () => void,\n  playlist: string[]\n}\n\ninterface State{\n  movies: briefMovieInfo[]\n}\n\nclass MoviePlayList extends React.Component<Props, State> {\n  state = {\n    movies: []\n  }\n  static getDerivedStateFromProps(props: Props, state: State) {\n    // We will use this life cycle in order to update the local state\n    // whenever prop change., i.e., only when the item is deleted from\n    // Checkout.\n    const filtered = state.movies.filter(movie => props.playlist.includes(movie.imdbID))\n    return {\n      movies: filtered\n    }\n  }\n\n  componentDidMount() {\n    this.props.playlist.map(async id => {\n      let movieDetail = await omdb.get('/', {\n        params: {\n          i: id\n        }\n      })\n      this.setState({movies: [...this.state.movies, movieDetail.data]})\n    })\n  }\n\n  confirmPlayList = () => {\n    console.log('Confirm Playlist');\n    alert('Playlist Confirmed!!')\n  }\n\n  render() {\n    const { movies } = this.state;\n    return <PlayListContainer>\n      <div className='list-view'>\n        {movies ? movies.map(movie => (\n          <span className='movie'>\n            <MovieItem movie={movie} {...this.props} />\n          </span>\n        )) : <React.Fragment></React.Fragment>}\n      </div>\n      {this.state.movies.length!==0?<div className='buttons'>\n        <ThemedButton padding='5px 15px' action={this.confirmPlayList}>\n          <label>Confirm Playlist</label>\n        </ThemedButton>\n        <ThemedButton padding='5px 15px' action={this.props.clearPlaylist}>\n          <label>Clear Playlist</label>\n        </ThemedButton>\n      </div> : <EmptyPlayList>\n          <label>Your playlist is empty</label>\n      </EmptyPlayList>}\n      </PlayListContainer>\n  }\n};\n\nexport default MoviePlayList;\n","import styled from 'styled-components';\nimport { devices } from '../../utils/screen-sizes';\n\ninterface Props {\n  color: string;\n}\nexport const RouterContainer = styled.div``;\n\nexport const Footer = styled.div<Props>`\n  background: ${(props) => props.color};\n  text-align: center;\n  color: white;\n  height: 50px;\n\n  @media ${devices.mobileL} {\n    margin: 0 auto;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const EmptyContainer = styled.div`\n  position: relative;\n  color: white;\n  width: 100vw;\n  height: 100vh;\n  text-align: center;\n  .text {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    .site {\n      font-weight: 700;\n      font-size: 3rem;\n      text-shadow: 1px 5px 10px white;\n      letter-spacing: 10px;\n      margin-bottom: 10px;\n    }\n  }\n`;\n","import React from 'react';\nimport { Logo } from '../header/header.styles';\nimport { EmptyContainer } from './not-found.styles'\n\nconst NotFound = () => {\n    return (\n        <EmptyContainer>\n            <div className='text'>\n                <div className='site'>OMBD</div>\n                <div className='err'>(404) Page not found</div>\n            </div>\n        </EmptyContainer>\n    );\n};\n\nexport default NotFound;","import Header from '../header/header.component';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport MovieList from '../movies/movie-list/movie-list.component';\nimport React from 'react';\nimport omdb from '../../api/omdb';\nimport MoviePlayList from '../movies/movie-playlist/movie-playlist.component';\nimport { briefMovieInfo, detailedMovieInfo} from '../../utils/interfaces'\nimport { Footer, RouterContainer } from './app.styles';\nimport NotFound from '../not-found/not-found.component'\n\ninterface Props{}\ninterface MyState {\n  playList: string[],\n  movieList: briefMovieInfo[],\n  movie: briefMovieInfo,\n  selectedMovie: detailedMovieInfo,\n  isScrolledBottom: boolean,\n  scrollingTopvalue:  number\n}\n\nexport default class App extends React.Component<Props, MyState> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      playList: [],\n      movieList: [],\n      movie: {\n        Title: '',\n        Poster: '',\n        Year: '',\n        imdbID: ''\n      },\n      selectedMovie: {\n        Title: '',\n        Year: '',\n        Rated: '',\n        Released: '',\n        Runtime: '',\n        Genre: '',\n        Director: '',\n        Writer: '',\n        Actors: '',\n        Plot: '',\n        Language: '',\n        Country: '',\n        Awards: '',\n        Poster: '',\n        imdbID: '',\n        imdbRating: '',\n      },\n      isScrolledBottom: false,\n      scrollingTopvalue: 0,\n    };\n  }\n  \n  setScrollingTopValue = (val: number) => {\n    this.setState({scrollingTopvalue: val})\n  }\n\n  setIsScrolling = (val: boolean) => {\n    this.setState({ isScrolledBottom: val });\n  };\n\n  getFullDetailsOfTheMovie = async (movie: briefMovieInfo) => {\n    // gets the imdbID from the initial movie from the list.\n    const imdbId = movie.imdbID;\n\n    // Get the initial selected movie full details.\n    const movieDetails = await omdb.get('/', {\n      params: {\n        i: imdbId,\n        plot: 'full',\n      },\n    });\n\n    // Sets the inital movie with full detials to the state as the selected\n    // movie.\n    if (movieDetails.status === 200 && movieDetails.data) {\n      this.setState({\n        selectedMovie: movieDetails.data,\n      });\n    }\n  };\n\n  setSelectMovie = (movie: briefMovieInfo) => {\n    this.getFullDetailsOfTheMovie(movie);\n  };\n\n  addToPlaylist = (val: string) => {\n    if (!this.state.playList.includes(val)) {\n      this.setState({ playList: [...this.state.playList, val] });\n    }\n  }\n\n  removeFromPlaylist = (val: string) => {\n    if (this.state.playList.includes(val)) {\n      this.setState({ playList: this.state.playList.filter(id => id!==val) });\n    }\n  }\n\n  clearPlaylist = () => {\n    this.setState({playList: []})\n  }\n\n  onSearchSubmit = async (text: string) => {\n    // Gets the list of movies from the omdb api\n    const moviesList = new Promise<any>(async (resolve, reject) => {\n      const response = await omdb.get('/', {\n        params: {\n          s: text,\n          plot: 'full',\n        },\n      });\n      const response_status = response.status;\n      const data_status = response.data.Response;\n      if (response_status === 200 && data_status === 'True') {\n        resolve(response.data.Search);\n      } else if (response_status === 200 && data_status === 'False') {\n        reject(response.data.Error);\n      }\n    });\n\n    moviesList.then(async (data) => {\n      // Stores the movies list in the state.\n      this.setState({\n        movieList: data,\n      });\n\n      this.getFullDetailsOfTheMovie(data[0]);\n    });\n  };\n\n  render() {\n    const { isScrolledBottom, scrollingTopvalue, playList, movieList, selectedMovie } = this.state;\n    return (\n      <RouterContainer>\n        <BrowserRouter>\n          <Header\n            handleSubmit={this.onSearchSubmit}\n            isScrolling={isScrolledBottom}\n            scrollingTopValue={scrollingTopvalue}\n          />\n          <div>\n            <Routes>\n              <Route\n                path='/fast_omdb/'\n                element={\n                  <MovieList\n                    playlist={playList}\n                    addToPlayList={this.addToPlaylist}\n                    removeFromPlaylist={this.removeFromPlaylist}\n                    setScrollingTop={this.setScrollingTopValue }\n                    setScrolling={this.setIsScrolling}\n                    movieList={movieList}\n                    selectedMovie={selectedMovie}\n                    onSelectMovie={this.setSelectMovie}\n                  />\n                }\n              />\n              <Route\n                path='/fast_omdb/playlist'\n                element={\n                  <MoviePlayList\n                    playlist={playList}\n                    addToPlayList={this.addToPlaylist}\n                    removeFromPlaylist={this.removeFromPlaylist}\n                    clearPlaylist={() => this.setState({playList:[]}) }\n                  />\n                }\n              />\n              <Route path='*' element={<NotFound />} />\n            </Routes>\n          </div>\n          <Footer color='red'>\n            My favorite color is red\n          </Footer>\n        </BrowserRouter>\n      </RouterContainer>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/app.component';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}